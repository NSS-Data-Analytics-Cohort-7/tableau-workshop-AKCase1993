<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='superbowl (superbowl)' inline='true' name='federated.1sn5ueg199kqtt14vcgan0f7d28m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='superbowl' name='excel-direct.0uzyk3y121obth1c5nlsk1fj4tmn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Andrew&apos;s Computer/OneDrive/Desktop/NSS DA7/Projects/tableau-workshop-AKCase1993/superbowl.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0uzyk3y121obth1c5nlsk1fj4tmn' name='superbowl' table='[superbowl$]' type='table'>
          <columns gridOrigin='A1:J55:no:A1:J55:0' header='yes' outcome='2'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='string' name='SB' ordinal='1' />
            <column datatype='string' name='Winner' ordinal='2' />
            <column datatype='integer' name='Winner Pts' ordinal='3' />
            <column datatype='string' name='Loser' ordinal='4' />
            <column datatype='integer' name='Loser Pts' ordinal='5' />
            <column datatype='string' name='MVP' ordinal='6' />
            <column datatype='string' name='Stadium' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0uzyk3y121obth1c5nlsk1fj4tmn' name='superbowl' table='[superbowl$]' type='table'>
          <columns gridOrigin='A1:J55:no:A1:J55:0' header='yes' outcome='2'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='string' name='SB' ordinal='1' />
            <column datatype='string' name='Winner' ordinal='2' />
            <column datatype='integer' name='Winner Pts' ordinal='3' />
            <column datatype='string' name='Loser' ordinal='4' />
            <column datatype='integer' name='Loser Pts' ordinal='5' />
            <column datatype='string' name='MVP' ordinal='6' />
            <column datatype='string' name='Stadium' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[superbowl]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J55:no:A1:J55:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SB</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SB]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>SB</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Winner]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>Winner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winner Pts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Winner Pts]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>Winner Pts</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loser</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Loser]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>Loser</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loser Pts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Loser Pts]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>Loser Pts</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MVP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MVP]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>MVP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stadium</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Stadium]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>Stadium</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[superbowl]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[superbowl_5208F80EC46A4E85B1139C12D705F090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Date]' role='dimension' type='nominal' />
      <column datatype='string' name='[MVP]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='superbowl' datatype='table' name='[__tableau_internal_object_id__].[superbowl_5208F80EC46A4E85B1139C12D705F090]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
      <column-instance column='[MVP]' derivation='None' name='[none:MVP:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Date:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Feb 3 2019&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jan 17 1971&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jan 30 1983&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Feb 1 2004&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jan 12 1969&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jan 26 1992&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Feb 2 2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jan 14 1973&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jan 28 1990&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Feb 5 2012&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jan 21 1979&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jan 31 1993&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Feb 4 2007&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jan 18 1976&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jan 30 1994&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Feb 3 2002&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jan 15 1967&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jan 28 1996&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jan 25 1998&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jan 9 1977&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Feb 1 2009&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jan 12 1975&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jan 26 1997&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Feb 7 2010&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jan 25 1981&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Feb 3 2008&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jan 15 1978&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jan 28 2001&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Feb 5 2017&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jan 22 1984&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jan 31 1999&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Feb 6 2005&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jan 22 1989&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Feb 7 2016&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jan 25 1987&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jan 11 1970&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jan 26 1986&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Feb 4 2018&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jan 20 1980&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jan 30 2000&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Feb 3 2013&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jan 16 1972&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jan 29 1995&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Feb 1 2015&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jan 13 1974&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jan 26 2003&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Feb 6 2011&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jan 24 1982&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Feb 5 2006&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jan 20 1985&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jan 31 1988&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Feb 2 2014&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jan 14 1968&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jan 27 1991&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:MVP:nk]' type='palette'>
            <map to='#305d8a'>
              <bucket>&quot;Eli Manning&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malcolm Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Rodgers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;John Elway+&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steve Young+&quot;</bucket>
            </map>
            <map to='#57a337'>
              <bucket>&quot;Bart Starr+&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Desmond Howard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Larry Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Troy Aikman+&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harvey MartinRandy White+&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ottis Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Emmitt Smith+&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcus Allen+&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dexter Jackson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Larry Csonka+&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Von Miller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roger Staubach+&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John Riggins+&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Terrell Davis+&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Plunkett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ray Lewis+&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Doug Williams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Len Dawson+&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hines Ward&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patrick Mahomes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jake Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peyton Manning&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joe Flacco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Richard Dent+&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Namath+&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santonio Holmes&quot;</bucket>
            </map>
            <map to='#e03426'>
              <bucket>&quot;Joe Montana+&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Franco Harris+&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mark Rypien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drew Brees&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lynn Swann+&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Howley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julian Edelman&quot;</bucket>
            </map>
            <map to='#f64971'>
              <bucket>&quot;Tom Brady&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;Terry Bradshaw+&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jerry Rice+&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phil Simms&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Biletnikoff+&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nick Foles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Deion Branch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kurt Warner+&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='superbowl' id='superbowl_5208F80EC46A4E85B1139C12D705F090'>
            <properties context=''>
              <relation connection='excel-direct.0uzyk3y121obth1c5nlsk1fj4tmn' name='superbowl' table='[superbowl$]' type='table'>
                <columns gridOrigin='A1:J55:no:A1:J55:0' header='yes' outcome='2'>
                  <column datatype='string' name='Date' ordinal='0' />
                  <column datatype='string' name='SB' ordinal='1' />
                  <column datatype='string' name='Winner' ordinal='2' />
                  <column datatype='integer' name='Winner Pts' ordinal='3' />
                  <column datatype='string' name='Loser' ordinal='4' />
                  <column datatype='integer' name='Loser Pts' ordinal='5' />
                  <column datatype='string' name='MVP' ordinal='6' />
                  <column datatype='string' name='Stadium' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Most MVPs'>
      <table>
        <view>
          <datasources>
            <datasource caption='superbowl (superbowl)' name='federated.1sn5ueg199kqtt14vcgan0f7d28m' />
          </datasources>
          <datasource-dependencies datasource='federated.1sn5ueg199kqtt14vcgan0f7d28m'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[MVP]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='superbowl' datatype='integer' name='[__tableau_internal_object_id__].[superbowl_5208F80EC46A4E85B1139C12D705F090]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[superbowl_5208F80EC46A4E85B1139C12D705F090]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:superbowl_5208F80EC46A4E85B1139C12D705F090:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='superbowl' datatype='table' name='[__tableau_internal_object_id__].[superbowl_5208F80EC46A4E85B1139C12D705F090]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[MVP]' derivation='None' name='[none:MVP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:MVP:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([MVP])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:MVP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:MVP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Tom Brady&quot;</bucket>
              <bucket>&quot;Joe Montana+&quot;</bucket>
              <bucket>&quot;Aaron Rodgers&quot;</bucket>
              <bucket>&quot;Bart Starr+&quot;</bucket>
              <bucket>&quot;Eli Manning&quot;</bucket>
              <bucket>&quot;Terry Bradshaw+&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:MVP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:MVP:nk]' />
              <lod column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Date:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[__tableau_internal_object_id__].[cnt:superbowl_5208F80EC46A4E85B1139C12D705F090:qk]</rows>
        <cols>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:MVP:nk]</cols>
      </table>
      <simple-id uuid='{583AE83F-4E98-41DB-BADD-0703704CF373}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='superbowl (superbowl)' name='federated.1sn5ueg199kqtt14vcgan0f7d28m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn5ueg199kqtt14vcgan0f7d28m'>
            <column datatype='string' name='[Loser]' role='dimension' type='nominal' />
            <column datatype='string' name='[SB]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Winner]' role='dimension' type='nominal' />
            <column-instance column='[Loser]' derivation='None' name='[none:Loser:nk]' pivot='key' type='nominal' />
            <column-instance column='[SB]' derivation='None' name='[none:SB:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Winner]' derivation='None' name='[none:Winner:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Winner:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Winner:nk]' member='&quot;Dallas Cowboys&quot;' />
              <groupfilter function='member' level='[none:Winner:nk]' member='&quot;San Francisco 49ers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[Longitude (generated)]' field-type='quantitative' max='-5823185.0062134881' min='-14392078.456842842' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[Latitude (generated)]' field-type='quantitative' max='6523425.0209922213' min='2483803.8082456421' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:SB:nk]' />
              <lod column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:State:nk]' />
              <lod column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:SB:nk]' />
              <lod column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Winner:nk]' />
              <lod column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Loser:nk]' />
              <geometry column='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[Latitude (generated)]</rows>
        <cols>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F25655DB-8623-4F22-B698-8747EBC9639D}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Most MVPs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:MVP:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Date:nk]</field>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:MVP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65E0D9D5-EBA5-41DD-8100-1DA59EC7B040}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Date:nk]</field>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Loser:nk]</field>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:SB:nk]</field>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Stadium:nk]</field>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:State:nk]</field>
            <field>[federated.1sn5ueg199kqtt14vcgan0f7d28m].[none:Winner:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{267D2ECD-DFE0-4814-862F-20729DE031D8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Most MVPs' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      2JTOcd62wP8Pf5fwklvaOKIAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
